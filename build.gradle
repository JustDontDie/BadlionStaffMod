buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'java'

version = "1.0"
group= "com.gmail.justdontdiebusiness.badlionstaffmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BadlionStaffMod"
sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = "1.7.10-10.13.4.1558-1.7.10"
    runDir = "eclipse"
}

repositories {
    jcenter()
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    shade 'net.dv8tion:JDA:3.4.0_321'
    shade group: 'commons-codec', name: 'commons-codec', version: '1.9'

}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

minecraft {
    srgExtra "PK: com/iwebpp libraries/com/iwebpp"
    srgExtra "PK: com/neovisionaries libraries/com/neovisionaries"
    srgExtra "PK: com/sun/jna/ libraries/com/sun/jna/"
    srgExtra "PK: gnu libraries/gnu"
    srgExtra "PK: net/dv8tion/jda libraries/net/dv8ation/jda"
    srgExtra "PK: okhttp3 libraries/okhttp3"
    srgExtra "PK: okio libraries/okio"
    srgExtra "PK: org libraries/org"
    srgExtra "PK: tomp2p libraries/tomp2p"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
